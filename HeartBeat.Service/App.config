<?xml version="1.0" encoding="utf-8" ?>
<configuration>

	<configSections>
		<section name="loggingConfiguration" type="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.LoggingSettings, Microsoft.Practices.EnterpriseLibrary.Logging" requirePermission="true" />
		<section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
		<sectionGroup name="heartbeat">
			<section name="settings" type="HeartBeat.Logic.Configuration.HeartBeatSettings, HeartBeat.Logic" allowLocation="true" />
		</sectionGroup>
	</configSections>

	<heartbeat>
		<!-- thisServer - Friendly Name for Reports which contain the name: e.g. JetBlue Production Web Node 1 (IP: 1.2.3.77)
			checkInterval - The amount of time in Milliseconds between Checks
				30000 = 30 seconds
				300000 = 5 minutes <== default
				900000 = 15 minutes
				3600000 = 1 hour
			to - The email address to send notifications to. Leave Blank to disable emailing
			subjectFormat - The Format of the mail subject. {0} = ThisServer, {1} = a UniqueId. Both params must be present.-->
		<settings thisServer="ENTER YOUR SERVER NAME HERE" checkInterval="300000" to="YOUR EMAIL @ YOUR DOMAIN.com" subjectFormat="[Heartbeat] [{0}] Notification Id:{1}">
			<servers>
				<!-- Specify Servers to be Pinged -->
				<!-- Optionally specify a Ping Timeout in Milliseconds(Equivalent of -w switch at command line) -->
				<!--
				<server friendlyName="The Domain Controller" serverName="MYDC" />
				<server friendlyName="SharePoint Server" serverName="MYSHAREPOINT"  />
				<server friendlyName="Unit Test Server" serverName="MYTEST" pingTimeout="3000"/>
				-->
			</servers>
			<services>
				<!-- Local Server - Run Service as an Admin to be able to use "Services" -->
				<!--
				<service friendlyName="Local IIS Webserver" serverName="localhost" serviceName="W3SVC" />
				-->
				
				<!-- Remote Server - Where the Executing Account is an Adminstrator on that Remote Machine -->
				<!--
				<service friendlyName="IIS Webserver On TestBox" serverName="MYTEST" serviceName="W3SVC" />
				-->
				
				<!-- Remote Server - Where a specific Admin Account is required-->
				<!--
				<service friendlyName="IIS Webserver On TestBox" serverName="MYTEST" serviceName="W3SVC" username="MYDOMAIN\User.Name" password="********" />
				-->
			</services>
			<queries>
				<!-- Arbitrary SQL Queries, Sprop must eihter Selct back 1 (success) or 0 (fail)-->
				<!-- Stored Procs will use a ConnectionString from the <connectionStrings> section with the specified key. -->
				<!--
				<query friendlyName="Test Success Sproc" connectionStringKey="QueryConnection" storedProc="MyDatabase.dbo.MySuccessfulSproc" />
				<query friendlyName="Test Failure Sproc" connectionStringKey="QueryConnection" storedProc="MyDatabase.dbo.MyFailedSproc"  />
				-->
			</queries>
			<uris>
				<!-- URIs to perform a web request against - Default behaviour is just to hit the URL for 200 OK Status -->
				<!--
				<uri friendlyName="TestPage1" uri="http://localhost/page200.html" />
				-->

				<!-- Alternatively you can specify that you expect a specifc HTTP Status Code - Useful for Authorization/Redirect Testing -->
				<!--
				<uri friendlyName="MissingPage" uri="http://localhost/page404.aspx" status="NotFound" />
				-->

				<!-- Finally, you can specify that you as well as a 200 OK, you also want to confirm that a specific piece of text is on the page using a regex pattern-->
				<!-- page contains "test" -->
				<!--
				<uri friendlyName="Details Page" uri="http://localhost/page200.html" match="t..t" />
				-->
			</uris>
			<drives>
				<!-- drives will be checked via WMI to ensure they have more than Threshold% of space free on them -->
				<!--
				<drive friendlyName="Local C: Drive" serverName="LOCALHOST" driveLetter="C:" threshold="0.2" />
				-->
				
				<!-- similar to the service check, you can specify to check the drives on another server if you have permission or by specifying a username & password -->
				<!-- 
				<drive friendlyName="Remote C: Drive on Server" serverName="192.168.100.100" driveLetter="C" threshold="0.5" />
				<drive friendlyName="Remote C: Drive on Server" serverName="192.168.100.100" driveLetter="C" threshold="0.5" domain="MYDOMAIN" username="User.Name" password="********" />
				-->
			</drives>
      <powershellScripts>
        <!-- 
        <powershellScript friendlyName="ScriptName" script="C:\Path\Scripts\SomeScript.ps1" params="Param1 Param2 In Order" />
        -->
      </powershellScripts>
      <scheduledTasks>
        <!--
        <scheduledTask friendlyName="Google Update Task" taskName="GoogleUpdateTaskMachineUA" serverName="\\MYMACHINE" domain="MYDOMAIN" username="User.Name" password="******" />
        -->
      </scheduledTasks>
    </settings>
	</heartbeat>

	<connectionStrings>
		<add name="QueryConnection" connectionString="Data Source=(local);Integrated Security=True;MultipleActiveResultSets=True;Initial Catalog=master;Application Name=HeartBeat"/>
	</connectionStrings>

	<loggingConfiguration name="Logging Configuration" tracingEnabled="true" defaultCategory="General">
		<listeners>
			<add fileName="Logs\Heartbeat.log" 
				 rollSizeKB="10240" timeStampPattern="yyyy-MM-dd" 
				 rollFileExistsBehavior="Increment" rollInterval="Midnight" 
				 formatter="Text Formatter" header="" footer="" 
				 listenerDataType="Microsoft.Practices.EnterpriseLibrary.Logging.Configuration.RollingFlatFileTraceListenerData, Microsoft.Practices.EnterpriseLibrary.Logging" 
				 name="AppLog" />
		</listeners>
		<formatters>
			<add template="{timestamp(local:yyyy-MM-dd HH:mm:ss)} : {message}" type="Microsoft.Practices.EnterpriseLibrary.Logging.Formatters.TextFormatter, Microsoft.Practices.EnterpriseLibrary.Logging" name="Text Formatter" />
		</formatters>
		<logFilters>
			<add type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.LogEnabledFilter, Microsoft.Practices.EnterpriseLibrary.Logging" enabled="true" name="Logging Enabled Filter" />
			<add type="Microsoft.Practices.EnterpriseLibrary.Logging.Filters.PriorityFilter, Microsoft.Practices.EnterpriseLibrary.Logging" maximumPriority="50" name="Priority Filter" />
		</logFilters>
		<categorySources>
			<add switchValue="All" name="Default Category">
				<listeners>
					<add name="AppLog" />
				</listeners>
			</add>
			<add switchValue="All" name="General">
				<listeners>
					<add name="AppLog" />
				</listeners>
			</add>
		</categorySources>
		<specialSources>
			<allEvents switchValue="All" name="All Events" />
			<notProcessed switchValue="All" name="Unprocessed Category" />
			<errors switchValue="All" name="Logging Errors &amp; Warnings">
				<listeners>
					<add name="AppLog" />
				</listeners>
			</errors>
		</specialSources>
	</loggingConfiguration>
	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
	</startup>
	<system.net>
		<mailSettings>
			<smtp deliveryMethod="Network" from="auto@example.com">
				<network defaultCredentials="false" enableSsl="true" host="smtp.gmail.com" port="587" userName="auto@example.com" password="password"/>
			</smtp>
 		</mailSettings>
	</system.net>
</configuration>